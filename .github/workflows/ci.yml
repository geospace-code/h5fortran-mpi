name: ci

env:
   HOMEBREW_NO_INSTALL_CLEANUP: 1

on:
  push:
    paths:
      - "**.c"
      - "**.cpp"
      - "**.f90"
      - "**.F90"
      - "**/CMakeLists.txt"
      - "**.cmake"
      - ".github/workflows/ci.yml"


jobs:

  linux_mac:
    timeout-minutes: 15

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        shared: [true, false]
        gcc: [8, 11]
        mpi: [mpich, openmpi]
        exclude:
        - os: macos-latest
          mpi: mpich
        - os: macos-latest
          gcc: 8

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.gcc }}
      FC: gfortran-${{ matrix.gcc }}

    steps:

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Python pkgs
      run: pip install numpy h5py

    - name: install HDF5-${{ matrix.mpi }} (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install --no-install-recommends gcc-${{ matrix.gcc }} gfortran-${{ matrix.gcc}} ninja-build libhdf5-${{ matrix.mpi }}-dev hdf5-tools lib${{ matrix.mpi }}-dev

    - name: Install HDF5-${{ matrix.mpi }} (MacOS)
      if: runner.os == 'macOS'
      run: |
        brew install hdf5-mpi ninja ${{ matrix.mpi }}
        brew reinstall gcc

    - uses: actions/checkout@v3

    - name: Configure h5fortran
      run: cmake -B build -G "Ninja Multi-Config" -DCMAKE_INSTALL_PREFIX=${{ runner.temp }} -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shared }}

    - name: Build Debug
      run: cmake --build build --parallel --config Debug
    - name: Test Debug
      run: ctest --test-dir build -C Debug --output-junit test-debug.xml

    - name: Build Release
      run: cmake --build build --parallel --config Release
    - name: Test Release
      run: ctest --test-dir build -C Release --output-junit test-release.xml

    - name: Publish Unit Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-junit
        path: build/test-*.xml

    - run: cmake --install build

    - name: configure examples
      run: cmake -S example -B example/build -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }} -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shared }}
    - name: build examples
      run: cmake --build example/build --parallel
    - name: Test examples
      run: ctest --test-dir example/build -V


  linux-coverage:
    needs: linux_mac
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: install hdf5
      run: |
        sudo apt update
        sudo apt install --no-install-recommends libhdf5-mpi-dev mpi-default-dev mpi-default-bin

    - name: install Gcovr
      run: pip install gcovr

    - run: cmake --preset coverage
    - run: cmake --build --parallel --preset coverage

    - name: Code coverage
      run: cmake --build --parallel --preset run-coverage

    - uses: actions/upload-artifact@v3
      with:
        name: coverage-report-html
        path: build-coverage/coverage/
