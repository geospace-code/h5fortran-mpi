name: ci

env:
  CTEST_PARALLEL_LEVEL: 4
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  CMAKE_BUILD_TYPE: Release

on:
  push:
    paths:
      - "**/CMakeLists.txt"
      - "**.cmake"
      - "**.f90"
      - ".github/workflows/ci.yml"
  release:
    types: [published]


jobs:

  linux-static:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: install hdf5
      run: |
        sudo apt update -yq
        sudo apt install -yq --no-install-recommends ninja-build libhdf5-openmpi-dev hdf5-tools libopenmpi-dev openmpi-bin

    - name: Python pkgs
      run: pip install --user -r requirements.txt

    - run: cmake --preset multi --install-prefix=${HOME}

    - run: cmake --build --preset release
    - run: ctest --preset release --output-junit test-release.xml

    - run: cmake --build --preset debug
    - run: ctest --preset debug --output-junit test-debug.xml

    - run: cmake --install build

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: build/test-*.xml

    - name: configure examples
      run: cmake -S Examples -B Examples/build -Dh5mpi_ROOT=${HOME}
    - name: build examples
      run: cmake --build Examples/build
    - name: Test examples
      run: ctest --test-dir Examples/build -V

  linux-shared:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2

    - name: install hdf5
      run: |
        sudo apt update -yq
        sudo apt install -yq --no-install-recommends ninja-build libhdf5-openmpi-dev hdf5-tools libopenmpi-dev openmpi-bin

    - run: cmake --preset multi -DBUILD_SHARED_LIBS:BOOL=true --install-prefix=${HOME}
    - run: cmake --build --preset debug
    - run: ctest --preset debug --output-junit test-debug.xml

    - run: cmake --build --preset release
    - run: ctest --preset release --output-junit test-release.xml

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: build/test-*.xml

    - run: cmake --install build

    - name: configure examples
      run: cmake -S Examples -B Examples/build -Dh5mpi_ROOT=${HOME}
    - name: build examples
      run: cmake --build Examples/build --parallel
    - name: Test examples
      run: ctest --test-dir Examples/build -V


  linux-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: install hdf5
      run: |
        sudo apt update -yq
        sudo apt install -yq --no-install-recommends libhdf5-openmpi-dev hdf5-tools libopenmpi-dev openmpi-bin

    - name: install Gcovr
      run: pip install gcovr

    - run: cmake --preset coverage
    - run: cmake --build --preset coverage

    - name: Code coverage
      run: cmake --build --preset run-coverage

    - uses: actions/upload-artifact@v2
      with:
        name: coverage-report-html
        path: build-coverage/coverage/


  linux-build-static:
    needs: linux-static
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2

    - name: install MPI
      run: |
        sudo apt update -yq
        sudo apt install -yq --no-install-recommends libopenmpi-dev openmpi-bin

    - run: cmake -B build --install-prefix=${HOME}

    - run: cmake --build build || cmake --build build
    # double build command is to workaround bug in HDF5 package itself when used as CMake ExternalProject, for 1.10 and 1.12

    - run: ctest --test-dir build --preset default

    - run: cmake --install build

    - name: configure examples
      run: cmake -S Examples -B Examples/build -Dh5mpi_ROOT=${HOME}
    - name: build examples
      run: cmake --build Examples/build
    - name: Test examples
      run: ctest --test-dir Examples/build -V


  linux-gcc8:
    needs: linux-static
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      CC: gcc-8
      FC: gfortran-8

    steps:
    - uses: actions/checkout@v2

    - name: install gcc, hdf5
      run: |
        sudo apt update -yq
        sudo apt install -yq --no-install-recommends gcc-8 gfortran-8 libhdf5-openmpi-dev hdf5-tools libopenmpi-dev openmpi-bin

    - run: cmake -B build --install-prefix=${HOME}
    - run: cmake --build build
    - run: ctest --test-dir build --preset default
    - run: cmake --install build
